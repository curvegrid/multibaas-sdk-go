/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the GetEventQuery200ResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEventQuery200ResponseAllOf{}

// GetEventQuery200ResponseAllOf struct for GetEventQuery200ResponseAllOf
type GetEventQuery200ResponseAllOf struct {
	Result EventQuery `json:"result"`
}

// NewGetEventQuery200ResponseAllOf instantiates a new GetEventQuery200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEventQuery200ResponseAllOf(result EventQuery) *GetEventQuery200ResponseAllOf {
	this := GetEventQuery200ResponseAllOf{}
	this.Result = result
	return &this
}

// NewGetEventQuery200ResponseAllOfWithDefaults instantiates a new GetEventQuery200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEventQuery200ResponseAllOfWithDefaults() *GetEventQuery200ResponseAllOf {
	this := GetEventQuery200ResponseAllOf{}
	return &this
}

// GetResult returns the Result field value
func (o *GetEventQuery200ResponseAllOf) GetResult() EventQuery {
	if o == nil {
		var ret EventQuery
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *GetEventQuery200ResponseAllOf) GetResultOk() (*EventQuery, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GetEventQuery200ResponseAllOf) SetResult(v EventQuery) {
	o.Result = v
}

func (o GetEventQuery200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEventQuery200ResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

type NullableGetEventQuery200ResponseAllOf struct {
	value *GetEventQuery200ResponseAllOf
	isSet bool
}

func (v NullableGetEventQuery200ResponseAllOf) Get() *GetEventQuery200ResponseAllOf {
	return v.value
}

func (v *NullableGetEventQuery200ResponseAllOf) Set(val *GetEventQuery200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEventQuery200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEventQuery200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEventQuery200ResponseAllOf(val *GetEventQuery200ResponseAllOf) *NullableGetEventQuery200ResponseAllOf {
	return &NullableGetEventQuery200ResponseAllOf{value: val, isSet: true}
}

func (v NullableGetEventQuery200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEventQuery200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
