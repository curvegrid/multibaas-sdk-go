/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the WebhookEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEndpoint{}

// WebhookEndpoint struct for WebhookEndpoint
type WebhookEndpoint struct {
	// The URL to send the webhook to.
	Url string `json:"url"`
	// An alias to easily identify and reference the entity in subsequent requests.
	Label string `json:"label" validate:"regexp=^[a-z0-9_-]+$"`
	// The events to subscribe to.
	Subscriptions []WebhookEventsType `json:"subscriptions"`
	Id            int64               `json:"id"`
	// The time the next attempt will be made.
	NextAttempt *time.Time `json:"nextAttempt,omitempty"`
	// The time the last attempt was made.
	LastAttempt *time.Time `json:"lastAttempt,omitempty"`
	// The number of failed webhook endpoint calls since the last successful call.
	FailedCalls int64 `json:"failedCalls"`
	// The last error received from the webhook endpoint.
	LastError *string `json:"lastError,omitempty"`
	// The time the webhook was created.
	CreatedAt time.Time `json:"createdAt"`
	// The time the webhook was last updated.
	UpdatedAt time.Time `json:"updatedAt"`
	// The secret key used to sign the webhook.
	Secret string `json:"secret"`
}

type _WebhookEndpoint WebhookEndpoint

// NewWebhookEndpoint instantiates a new WebhookEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEndpoint(url string, label string, subscriptions []WebhookEventsType, id int64, failedCalls int64, createdAt time.Time, updatedAt time.Time, secret string) *WebhookEndpoint {
	this := WebhookEndpoint{}
	this.Url = url
	this.Label = label
	this.Subscriptions = subscriptions
	this.Id = id
	this.FailedCalls = failedCalls
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Secret = secret
	return &this
}

// NewWebhookEndpointWithDefaults instantiates a new WebhookEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEndpointWithDefaults() *WebhookEndpoint {
	this := WebhookEndpoint{}
	return &this
}

// GetUrl returns the Url field value
func (o *WebhookEndpoint) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookEndpoint) SetUrl(v string) {
	o.Url = v
}

// GetLabel returns the Label field value
func (o *WebhookEndpoint) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *WebhookEndpoint) SetLabel(v string) {
	o.Label = v
}

// GetSubscriptions returns the Subscriptions field value
func (o *WebhookEndpoint) GetSubscriptions() []WebhookEventsType {
	if o == nil {
		var ret []WebhookEventsType
		return ret
	}

	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetSubscriptionsOk() ([]WebhookEventsType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// SetSubscriptions sets field value
func (o *WebhookEndpoint) SetSubscriptions(v []WebhookEventsType) {
	o.Subscriptions = v
}

// GetId returns the Id field value
func (o *WebhookEndpoint) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookEndpoint) SetId(v int64) {
	o.Id = v
}

// GetNextAttempt returns the NextAttempt field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetNextAttempt() time.Time {
	if o == nil || IsNil(o.NextAttempt) {
		var ret time.Time
		return ret
	}
	return *o.NextAttempt
}

// GetNextAttemptOk returns a tuple with the NextAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetNextAttemptOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextAttempt) {
		return nil, false
	}
	return o.NextAttempt, true
}

// HasNextAttempt returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasNextAttempt() bool {
	if o != nil && !IsNil(o.NextAttempt) {
		return true
	}

	return false
}

// SetNextAttempt gets a reference to the given time.Time and assigns it to the NextAttempt field.
func (o *WebhookEndpoint) SetNextAttempt(v time.Time) {
	o.NextAttempt = &v
}

// GetLastAttempt returns the LastAttempt field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetLastAttempt() time.Time {
	if o == nil || IsNil(o.LastAttempt) {
		var ret time.Time
		return ret
	}
	return *o.LastAttempt
}

// GetLastAttemptOk returns a tuple with the LastAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetLastAttemptOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAttempt) {
		return nil, false
	}
	return o.LastAttempt, true
}

// HasLastAttempt returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasLastAttempt() bool {
	if o != nil && !IsNil(o.LastAttempt) {
		return true
	}

	return false
}

// SetLastAttempt gets a reference to the given time.Time and assigns it to the LastAttempt field.
func (o *WebhookEndpoint) SetLastAttempt(v time.Time) {
	o.LastAttempt = &v
}

// GetFailedCalls returns the FailedCalls field value
func (o *WebhookEndpoint) GetFailedCalls() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FailedCalls
}

// GetFailedCallsOk returns a tuple with the FailedCalls field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetFailedCallsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedCalls, true
}

// SetFailedCalls sets field value
func (o *WebhookEndpoint) SetFailedCalls(v int64) {
	o.FailedCalls = v
}

// GetLastError returns the LastError field value if set, zero value otherwise.
func (o *WebhookEndpoint) GetLastError() string {
	if o == nil || IsNil(o.LastError) {
		var ret string
		return ret
	}
	return *o.LastError
}

// GetLastErrorOk returns a tuple with the LastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetLastErrorOk() (*string, bool) {
	if o == nil || IsNil(o.LastError) {
		return nil, false
	}
	return o.LastError, true
}

// HasLastError returns a boolean if a field has been set.
func (o *WebhookEndpoint) HasLastError() bool {
	if o != nil && !IsNil(o.LastError) {
		return true
	}

	return false
}

// SetLastError gets a reference to the given string and assigns it to the LastError field.
func (o *WebhookEndpoint) SetLastError(v string) {
	o.LastError = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhookEndpoint) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhookEndpoint) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WebhookEndpoint) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WebhookEndpoint) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSecret returns the Secret field value
func (o *WebhookEndpoint) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *WebhookEndpoint) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *WebhookEndpoint) SetSecret(v string) {
	o.Secret = v
}

func (o WebhookEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["label"] = o.Label
	toSerialize["subscriptions"] = o.Subscriptions
	toSerialize["id"] = o.Id
	if !IsNil(o.NextAttempt) {
		toSerialize["nextAttempt"] = o.NextAttempt
	}
	if !IsNil(o.LastAttempt) {
		toSerialize["lastAttempt"] = o.LastAttempt
	}
	toSerialize["failedCalls"] = o.FailedCalls
	if !IsNil(o.LastError) {
		toSerialize["lastError"] = o.LastError
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["secret"] = o.Secret
	return toSerialize, nil
}

func (o *WebhookEndpoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"label",
		"subscriptions",
		"id",
		"failedCalls",
		"createdAt",
		"updatedAt",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEndpoint := _WebhookEndpoint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEndpoint)

	if err != nil {
		return err
	}

	*o = WebhookEndpoint(varWebhookEndpoint)

	return err
}

type NullableWebhookEndpoint struct {
	value *WebhookEndpoint
	isSet bool
}

func (v NullableWebhookEndpoint) Get() *WebhookEndpoint {
	return v.value
}

func (v *NullableWebhookEndpoint) Set(val *WebhookEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEndpoint(val *WebhookEndpoint) *NullableWebhookEndpoint {
	return &NullableWebhookEndpoint{value: val, isSet: true}
}

func (v NullableWebhookEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
