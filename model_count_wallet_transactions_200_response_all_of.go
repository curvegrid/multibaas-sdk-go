/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the CountWalletTransactions200ResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CountWalletTransactions200ResponseAllOf{}

// CountWalletTransactions200ResponseAllOf struct for CountWalletTransactions200ResponseAllOf
type CountWalletTransactions200ResponseAllOf struct {
	// The transaction count.
	Result int64 `json:"result"`
}

// NewCountWalletTransactions200ResponseAllOf instantiates a new CountWalletTransactions200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCountWalletTransactions200ResponseAllOf(result int64) *CountWalletTransactions200ResponseAllOf {
	this := CountWalletTransactions200ResponseAllOf{}
	this.Result = result
	return &this
}

// NewCountWalletTransactions200ResponseAllOfWithDefaults instantiates a new CountWalletTransactions200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCountWalletTransactions200ResponseAllOfWithDefaults() *CountWalletTransactions200ResponseAllOf {
	this := CountWalletTransactions200ResponseAllOf{}
	return &this
}

// GetResult returns the Result field value
func (o *CountWalletTransactions200ResponseAllOf) GetResult() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *CountWalletTransactions200ResponseAllOf) GetResultOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *CountWalletTransactions200ResponseAllOf) SetResult(v int64) {
	o.Result = v
}

func (o CountWalletTransactions200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CountWalletTransactions200ResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	return toSerialize, nil
}

type NullableCountWalletTransactions200ResponseAllOf struct {
	value *CountWalletTransactions200ResponseAllOf
	isSet bool
}

func (v NullableCountWalletTransactions200ResponseAllOf) Get() *CountWalletTransactions200ResponseAllOf {
	return v.value
}

func (v *NullableCountWalletTransactions200ResponseAllOf) Set(val *CountWalletTransactions200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCountWalletTransactions200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCountWalletTransactions200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountWalletTransactions200ResponseAllOf(val *CountWalletTransactions200ResponseAllOf) *NullableCountWalletTransactions200ResponseAllOf {
	return &NullableCountWalletTransactions200ResponseAllOf{value: val, isSet: true}
}

func (v NullableCountWalletTransactions200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountWalletTransactions200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
