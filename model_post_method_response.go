/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the PostMethodResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostMethodResponse{}

// PostMethodResponse struct for PostMethodResponse
type PostMethodResponse struct {
	// The response object type (discriminator).
	Kind string `json:"kind"`
}

type _PostMethodResponse PostMethodResponse

// NewPostMethodResponse instantiates a new PostMethodResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostMethodResponse(kind string) *PostMethodResponse {
	this := PostMethodResponse{}
	this.Kind = kind
	return &this
}

// NewPostMethodResponseWithDefaults instantiates a new PostMethodResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostMethodResponseWithDefaults() *PostMethodResponse {
	this := PostMethodResponse{}
	return &this
}

// GetKind returns the Kind field value
func (o *PostMethodResponse) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *PostMethodResponse) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *PostMethodResponse) SetKind(v string) {
	o.Kind = v
}

func (o PostMethodResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	return toSerialize, nil
}

type NullablePostMethodResponse struct {
	value *PostMethodResponse
	isSet bool
}

func (v NullablePostMethodResponse) Get() *PostMethodResponse {
	return v.value
}

func (v *NullablePostMethodResponse) Set(val *PostMethodResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostMethodResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostMethodResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostMethodResponse(val *PostMethodResponse) *NullablePostMethodResponse {
	return &NullablePostMethodResponse{value: val, isSet: true}
}

func (v NullablePostMethodResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostMethodResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
