/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the MethodTypeConversionOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MethodTypeConversionOptions{}

// MethodTypeConversionOptions Type conversion options for each of the inputs and outputs of a function.
type MethodTypeConversionOptions struct {
	Inputs  []TypeConversionOptions `json:"inputs"`
	Outputs []TypeConversionOptions `json:"outputs"`
}

type _MethodTypeConversionOptions MethodTypeConversionOptions

// NewMethodTypeConversionOptions instantiates a new MethodTypeConversionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMethodTypeConversionOptions(inputs []TypeConversionOptions, outputs []TypeConversionOptions) *MethodTypeConversionOptions {
	this := MethodTypeConversionOptions{}
	this.Inputs = inputs
	this.Outputs = outputs
	return &this
}

// NewMethodTypeConversionOptionsWithDefaults instantiates a new MethodTypeConversionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMethodTypeConversionOptionsWithDefaults() *MethodTypeConversionOptions {
	this := MethodTypeConversionOptions{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *MethodTypeConversionOptions) GetInputs() []TypeConversionOptions {
	if o == nil {
		var ret []TypeConversionOptions
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *MethodTypeConversionOptions) GetInputsOk() ([]TypeConversionOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *MethodTypeConversionOptions) SetInputs(v []TypeConversionOptions) {
	o.Inputs = v
}

// GetOutputs returns the Outputs field value
func (o *MethodTypeConversionOptions) GetOutputs() []TypeConversionOptions {
	if o == nil {
		var ret []TypeConversionOptions
		return ret
	}

	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value
// and a boolean to check if the value has been set.
func (o *MethodTypeConversionOptions) GetOutputsOk() ([]TypeConversionOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Outputs, true
}

// SetOutputs sets field value
func (o *MethodTypeConversionOptions) SetOutputs(v []TypeConversionOptions) {
	o.Outputs = v
}

func (o MethodTypeConversionOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inputs"] = o.Inputs
	toSerialize["outputs"] = o.Outputs
	return toSerialize, nil
}

type NullableMethodTypeConversionOptions struct {
	value *MethodTypeConversionOptions
	isSet bool
}

func (v NullableMethodTypeConversionOptions) Get() *MethodTypeConversionOptions {
	return v.value
}

func (v *NullableMethodTypeConversionOptions) Set(val *MethodTypeConversionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMethodTypeConversionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMethodTypeConversionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMethodTypeConversionOptions(val *MethodTypeConversionOptions) *NullableMethodTypeConversionOptions {
	return &NullableMethodTypeConversionOptions{value: val, isSet: true}
}

func (v NullableMethodTypeConversionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMethodTypeConversionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
