/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the SetCodeAuthorization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetCodeAuthorization{}

// SetCodeAuthorization Authorization data for setCode operations.
type SetCodeAuthorization struct {
	// A hex string.
	ChainId string `json:"chainId"`
	// An ethereum address.
	Address string `json:"address"`
	// A hex string.
	Nonce string `json:"nonce"`
	// A hex string.
	YParity string `json:"yParity"`
	// A hex string.
	R string `json:"r"`
	// A hex string.
	S string `json:"s"`
}

// NewSetCodeAuthorization instantiates a new SetCodeAuthorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetCodeAuthorization(chainId string, address string, nonce string, yParity string, r string, s string) *SetCodeAuthorization {
	this := SetCodeAuthorization{}
	this.ChainId = chainId
	this.Address = address
	this.Nonce = nonce
	this.YParity = yParity
	this.R = r
	this.S = s
	return &this
}

// NewSetCodeAuthorizationWithDefaults instantiates a new SetCodeAuthorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetCodeAuthorizationWithDefaults() *SetCodeAuthorization {
	this := SetCodeAuthorization{}
	return &this
}

// GetChainId returns the ChainId field value
func (o *SetCodeAuthorization) GetChainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetChainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *SetCodeAuthorization) SetChainId(v string) {
	o.ChainId = v
}

// GetAddress returns the Address field value
func (o *SetCodeAuthorization) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *SetCodeAuthorization) SetAddress(v string) {
	o.Address = v
}

// GetNonce returns the Nonce field value
func (o *SetCodeAuthorization) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *SetCodeAuthorization) SetNonce(v string) {
	o.Nonce = v
}

// GetYParity returns the YParity field value
func (o *SetCodeAuthorization) GetYParity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.YParity
}

// GetYParityOk returns a tuple with the YParity field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetYParityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.YParity, true
}

// SetYParity sets field value
func (o *SetCodeAuthorization) SetYParity(v string) {
	o.YParity = v
}

// GetR returns the R field value
func (o *SetCodeAuthorization) GetR() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.R
}

// GetROk returns a tuple with the R field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetROk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.R, true
}

// SetR sets field value
func (o *SetCodeAuthorization) SetR(v string) {
	o.R = v
}

// GetS returns the S field value
func (o *SetCodeAuthorization) GetS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.S
}

// GetSOk returns a tuple with the S field value
// and a boolean to check if the value has been set.
func (o *SetCodeAuthorization) GetSOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.S, true
}

// SetS sets field value
func (o *SetCodeAuthorization) SetS(v string) {
	o.S = v
}

func (o SetCodeAuthorization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetCodeAuthorization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chainId"] = o.ChainId
	toSerialize["address"] = o.Address
	toSerialize["nonce"] = o.Nonce
	toSerialize["yParity"] = o.YParity
	toSerialize["r"] = o.R
	toSerialize["s"] = o.S
	return toSerialize, nil
}

type NullableSetCodeAuthorization struct {
	value *SetCodeAuthorization
	isSet bool
}

func (v NullableSetCodeAuthorization) Get() *SetCodeAuthorization {
	return v.value
}

func (v *NullableSetCodeAuthorization) Set(val *SetCodeAuthorization) {
	v.value = val
	v.isSet = true
}

func (v NullableSetCodeAuthorization) IsSet() bool {
	return v.isSet
}

func (v *NullableSetCodeAuthorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetCodeAuthorization(val *SetCodeAuthorization) *NullableSetCodeAuthorization {
	return &NullableSetCodeAuthorization{value: val, isSet: true}
}

func (v NullableSetCodeAuthorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetCodeAuthorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
