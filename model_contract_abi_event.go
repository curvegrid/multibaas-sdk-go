/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the ContractABIEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractABIEvent{}

// ContractABIEvent A contract event.
type ContractABIEvent struct {
	// The keccak256 hash as a hex string of 256 bits.
	Id        string `json:"id"`
	Name      string `json:"name"`
	Signature string `json:"signature"`
	Anonymous bool   `json:"anonymous"`
	// List of contract event's input arguments.
	Inputs []ContractABIEventArgument `json:"inputs"`
	// The developer documentation.
	Notes string `json:"notes"`
	// The user documentation.
	Description string `json:"description"`
}

// NewContractABIEvent instantiates a new ContractABIEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractABIEvent(id string, name string, signature string, anonymous bool, inputs []ContractABIEventArgument, notes string, description string) *ContractABIEvent {
	this := ContractABIEvent{}
	this.Id = id
	this.Name = name
	this.Signature = signature
	this.Anonymous = anonymous
	this.Inputs = inputs
	this.Notes = notes
	this.Description = description
	return &this
}

// NewContractABIEventWithDefaults instantiates a new ContractABIEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractABIEventWithDefaults() *ContractABIEvent {
	this := ContractABIEvent{}
	return &this
}

// GetId returns the Id field value
func (o *ContractABIEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContractABIEvent) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ContractABIEvent) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContractABIEvent) SetName(v string) {
	o.Name = v
}

// GetSignature returns the Signature field value
func (o *ContractABIEvent) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *ContractABIEvent) SetSignature(v string) {
	o.Signature = v
}

// GetAnonymous returns the Anonymous field value
func (o *ContractABIEvent) GetAnonymous() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Anonymous
}

// GetAnonymousOk returns a tuple with the Anonymous field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetAnonymousOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Anonymous, true
}

// SetAnonymous sets field value
func (o *ContractABIEvent) SetAnonymous(v bool) {
	o.Anonymous = v
}

// GetInputs returns the Inputs field value
func (o *ContractABIEvent) GetInputs() []ContractABIEventArgument {
	if o == nil {
		var ret []ContractABIEventArgument
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetInputsOk() ([]ContractABIEventArgument, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *ContractABIEvent) SetInputs(v []ContractABIEventArgument) {
	o.Inputs = v
}

// GetNotes returns the Notes field value
func (o *ContractABIEvent) GetNotes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Notes
}

// GetNotesOk returns a tuple with the Notes field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notes, true
}

// SetNotes sets field value
func (o *ContractABIEvent) SetNotes(v string) {
	o.Notes = v
}

// GetDescription returns the Description field value
func (o *ContractABIEvent) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ContractABIEvent) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ContractABIEvent) SetDescription(v string) {
	o.Description = v
}

func (o ContractABIEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractABIEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["signature"] = o.Signature
	toSerialize["anonymous"] = o.Anonymous
	toSerialize["inputs"] = o.Inputs
	toSerialize["notes"] = o.Notes
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

type NullableContractABIEvent struct {
	value *ContractABIEvent
	isSet bool
}

func (v NullableContractABIEvent) Get() *ContractABIEvent {
	return v.value
}

func (v *NullableContractABIEvent) Set(val *ContractABIEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableContractABIEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableContractABIEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractABIEvent(val *ContractABIEvent) *NullableContractABIEvent {
	return &NullableContractABIEvent{value: val, isSet: true}
}

func (v NullableContractABIEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractABIEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
