/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the AcceptInviteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcceptInviteRequest{}

// AcceptInviteRequest struct for AcceptInviteRequest
type AcceptInviteRequest struct {
	// The user ID Token
	IdToken *string `json:"idToken,omitempty"`
}

// NewAcceptInviteRequest instantiates a new AcceptInviteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptInviteRequest() *AcceptInviteRequest {
	this := AcceptInviteRequest{}
	return &this
}

// NewAcceptInviteRequestWithDefaults instantiates a new AcceptInviteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptInviteRequestWithDefaults() *AcceptInviteRequest {
	this := AcceptInviteRequest{}
	return &this
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *AcceptInviteRequest) GetIdToken() string {
	if o == nil || IsNil(o.IdToken) {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptInviteRequest) GetIdTokenOk() (*string, bool) {
	if o == nil || IsNil(o.IdToken) {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *AcceptInviteRequest) HasIdToken() bool {
	if o != nil && !IsNil(o.IdToken) {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *AcceptInviteRequest) SetIdToken(v string) {
	o.IdToken = &v
}

func (o AcceptInviteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdToken) {
		toSerialize["idToken"] = o.IdToken
	}
	return toSerialize, nil
}

type NullableAcceptInviteRequest struct {
	value *AcceptInviteRequest
	isSet bool
}

func (v NullableAcceptInviteRequest) Get() *AcceptInviteRequest {
	return v.value
}

func (v *NullableAcceptInviteRequest) Set(val *AcceptInviteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptInviteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptInviteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptInviteRequest(val *AcceptInviteRequest) *NullableAcceptInviteRequest {
	return &NullableAcceptInviteRequest{value: val, isSet: true}
}

func (v NullableAcceptInviteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptInviteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
