/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HSMSignRequestTypedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HSMSignRequestTypedData{}

// HSMSignRequestTypedData Request to sign typed data using a cloud wallet.
type HSMSignRequestTypedData struct {
	// The signing method to use.
	Method string `json:"method"`
	// An ethereum address.
	Address string          `json:"address" validate:"regexp=^0[xX][a-fA-F0-9]{40}$"`
	Data    EIP712TypedData `json:"data"`
}

type _HSMSignRequestTypedData HSMSignRequestTypedData

// NewHSMSignRequestTypedData instantiates a new HSMSignRequestTypedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHSMSignRequestTypedData(method string, address string, data EIP712TypedData) *HSMSignRequestTypedData {
	this := HSMSignRequestTypedData{}
	this.Method = method
	this.Address = address
	this.Data = data
	return &this
}

// NewHSMSignRequestTypedDataWithDefaults instantiates a new HSMSignRequestTypedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHSMSignRequestTypedDataWithDefaults() *HSMSignRequestTypedData {
	this := HSMSignRequestTypedData{}
	return &this
}

// GetMethod returns the Method field value
func (o *HSMSignRequestTypedData) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *HSMSignRequestTypedData) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *HSMSignRequestTypedData) SetMethod(v string) {
	o.Method = v
}

// GetAddress returns the Address field value
func (o *HSMSignRequestTypedData) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *HSMSignRequestTypedData) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *HSMSignRequestTypedData) SetAddress(v string) {
	o.Address = v
}

// GetData returns the Data field value
func (o *HSMSignRequestTypedData) GetData() EIP712TypedData {
	if o == nil {
		var ret EIP712TypedData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *HSMSignRequestTypedData) GetDataOk() (*EIP712TypedData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *HSMSignRequestTypedData) SetData(v EIP712TypedData) {
	o.Data = v
}

func (o HSMSignRequestTypedData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HSMSignRequestTypedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["method"] = o.Method
	toSerialize["address"] = o.Address
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *HSMSignRequestTypedData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
		"address",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHSMSignRequestTypedData := _HSMSignRequestTypedData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHSMSignRequestTypedData)

	if err != nil {
		return err
	}

	*o = HSMSignRequestTypedData(varHSMSignRequestTypedData)

	return err
}

type NullableHSMSignRequestTypedData struct {
	value *HSMSignRequestTypedData
	isSet bool
}

func (v NullableHSMSignRequestTypedData) Get() *HSMSignRequestTypedData {
	return v.value
}

func (v *NullableHSMSignRequestTypedData) Set(val *HSMSignRequestTypedData) {
	v.value = val
	v.isSet = true
}

func (v NullableHSMSignRequestTypedData) IsSet() bool {
	return v.isSet
}

func (v *NullableHSMSignRequestTypedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHSMSignRequestTypedData(val *HSMSignRequestTypedData) *NullableHSMSignRequestTypedData {
	return &NullableHSMSignRequestTypedData{value: val, isSet: true}
}

func (v NullableHSMSignRequestTypedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHSMSignRequestTypedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
