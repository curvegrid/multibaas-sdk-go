/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContractABI type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractABI{}

// ContractABI The contract ABI.
type ContractABI struct {
	Constructor NullableContractABIMethod1   `json:"constructor"`
	Methods     map[string]ContractABIMethod `json:"methods"`
	Events      map[string]ContractABIEvent  `json:"events"`
	Errors      *map[string]ContractABIError `json:"errors,omitempty"`
	Fallback    NullableContractABIMethod    `json:"fallback"`
	Receive     NullableContractABIMethod    `json:"receive"`
}

type _ContractABI ContractABI

// NewContractABI instantiates a new ContractABI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractABI(constructor NullableContractABIMethod1, methods map[string]ContractABIMethod, events map[string]ContractABIEvent, fallback NullableContractABIMethod, receive NullableContractABIMethod) *ContractABI {
	this := ContractABI{}
	this.Constructor = constructor
	this.Methods = methods
	this.Events = events
	this.Fallback = fallback
	this.Receive = receive
	return &this
}

// NewContractABIWithDefaults instantiates a new ContractABI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractABIWithDefaults() *ContractABI {
	this := ContractABI{}
	return &this
}

// GetConstructor returns the Constructor field value
// If the value is explicit nil, the zero value for ContractABIMethod1 will be returned
func (o *ContractABI) GetConstructor() ContractABIMethod1 {
	if o == nil || o.Constructor.Get() == nil {
		var ret ContractABIMethod1
		return ret
	}

	return *o.Constructor.Get()
}

// GetConstructorOk returns a tuple with the Constructor field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractABI) GetConstructorOk() (*ContractABIMethod1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Constructor.Get(), o.Constructor.IsSet()
}

// SetConstructor sets field value
func (o *ContractABI) SetConstructor(v ContractABIMethod1) {
	o.Constructor.Set(&v)
}

// GetMethods returns the Methods field value
func (o *ContractABI) GetMethods() map[string]ContractABIMethod {
	if o == nil {
		var ret map[string]ContractABIMethod
		return ret
	}

	return o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value
// and a boolean to check if the value has been set.
func (o *ContractABI) GetMethodsOk() (*map[string]ContractABIMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Methods, true
}

// SetMethods sets field value
func (o *ContractABI) SetMethods(v map[string]ContractABIMethod) {
	o.Methods = v
}

// GetEvents returns the Events field value
func (o *ContractABI) GetEvents() map[string]ContractABIEvent {
	if o == nil {
		var ret map[string]ContractABIEvent
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *ContractABI) GetEventsOk() (*map[string]ContractABIEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Events, true
}

// SetEvents sets field value
func (o *ContractABI) SetEvents(v map[string]ContractABIEvent) {
	o.Events = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ContractABI) GetErrors() map[string]ContractABIError {
	if o == nil || IsNil(o.Errors) {
		var ret map[string]ContractABIError
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractABI) GetErrorsOk() (*map[string]ContractABIError, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ContractABI) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given map[string]ContractABIError and assigns it to the Errors field.
func (o *ContractABI) SetErrors(v map[string]ContractABIError) {
	o.Errors = &v
}

// GetFallback returns the Fallback field value
// If the value is explicit nil, the zero value for ContractABIMethod will be returned
func (o *ContractABI) GetFallback() ContractABIMethod {
	if o == nil || o.Fallback.Get() == nil {
		var ret ContractABIMethod
		return ret
	}

	return *o.Fallback.Get()
}

// GetFallbackOk returns a tuple with the Fallback field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractABI) GetFallbackOk() (*ContractABIMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fallback.Get(), o.Fallback.IsSet()
}

// SetFallback sets field value
func (o *ContractABI) SetFallback(v ContractABIMethod) {
	o.Fallback.Set(&v)
}

// GetReceive returns the Receive field value
// If the value is explicit nil, the zero value for ContractABIMethod will be returned
func (o *ContractABI) GetReceive() ContractABIMethod {
	if o == nil || o.Receive.Get() == nil {
		var ret ContractABIMethod
		return ret
	}

	return *o.Receive.Get()
}

// GetReceiveOk returns a tuple with the Receive field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractABI) GetReceiveOk() (*ContractABIMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.Receive.Get(), o.Receive.IsSet()
}

// SetReceive sets field value
func (o *ContractABI) SetReceive(v ContractABIMethod) {
	o.Receive.Set(&v)
}

func (o ContractABI) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContractABI) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["constructor"] = o.Constructor.Get()
	toSerialize["methods"] = o.Methods
	toSerialize["events"] = o.Events
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	toSerialize["fallback"] = o.Fallback.Get()
	toSerialize["receive"] = o.Receive.Get()
	return toSerialize, nil
}

func (o *ContractABI) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"constructor",
		"methods",
		"events",
		"fallback",
		"receive",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContractABI := _ContractABI{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContractABI)

	if err != nil {
		return err
	}

	*o = ContractABI(varContractABI)

	return err
}

type NullableContractABI struct {
	value *ContractABI
	isSet bool
}

func (v NullableContractABI) Get() *ContractABI {
	return v.value
}

func (v *NullableContractABI) Set(val *ContractABI) {
	v.value = val
	v.isSet = true
}

func (v NullableContractABI) IsSet() bool {
	return v.isSet
}

func (v *NullableContractABI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractABI(val *ContractABI) *NullableContractABI {
	return &NullableContractABI{value: val, isSet: true}
}

func (v NullableContractABI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractABI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
