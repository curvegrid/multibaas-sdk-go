/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
	"time"
)

// checks if the APIKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIKey_{}

// APIKey An API key.
type APIKey_ struct {
	// A label.
	Label string `json:"label"`
	Id    int64  `json:"id"`
	// The time the API key was created.
	CreatedAt time.Time `json:"createdAt"`
	// The time the API key was last used.
	LastUsedAt *time.Time `json:"lastUsedAt,omitempty"`
	// The ID of the user that created the API key.
	CreatedBy int64 `json:"createdBy"`
	// The signature of the API key.
	Signature string `json:"signature"`
}

// NewAPIKey instantiates a new APIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKey(label string, id int64, createdAt time.Time, createdBy int64, signature string) *APIKey_ {
	this := APIKey_{}
	this.Label = label
	this.Id = id
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.Signature = signature
	return &this
}

// NewAPIKeyWithDefaults instantiates a new APIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyWithDefaults() *APIKey_ {
	this := APIKey_{}
	return &this
}

// GetLabel returns the Label field value
func (o *APIKey_) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *APIKey_) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *APIKey_) SetLabel(v string) {
	o.Label = v
}

// GetId returns the Id field value
func (o *APIKey_) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIKey_) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIKey_) SetId(v int64) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *APIKey_) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *APIKey_) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *APIKey_) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise.
func (o *APIKey_) GetLastUsedAt() time.Time {
	if o == nil || IsNil(o.LastUsedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKey_) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUsedAt) {
		return nil, false
	}
	return o.LastUsedAt, true
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *APIKey_) HasLastUsedAt() bool {
	if o != nil && !IsNil(o.LastUsedAt) {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given time.Time and assigns it to the LastUsedAt field.
func (o *APIKey_) SetLastUsedAt(v time.Time) {
	o.LastUsedAt = &v
}

// GetCreatedBy returns the CreatedBy field value
func (o *APIKey_) GetCreatedBy() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *APIKey_) GetCreatedByOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *APIKey_) SetCreatedBy(v int64) {
	o.CreatedBy = v
}

// GetSignature returns the Signature field value
func (o *APIKey_) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *APIKey_) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *APIKey_) SetSignature(v string) {
	o.Signature = v
}

func (o APIKey_) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIKey_) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.LastUsedAt) {
		toSerialize["lastUsedAt"] = o.LastUsedAt
	}
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

type NullableAPIKey struct {
	value *APIKey_
	isSet bool
}

func (v NullableAPIKey) Get() *APIKey_ {
	return v.value
}

func (v *NullableAPIKey) Set(val *APIKey_) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKey(val *APIKey_) *NullableAPIKey {
	return &NullableAPIKey{value: val, isSet: true}
}

func (v NullableAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
