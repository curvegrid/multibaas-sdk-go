/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the ContractEventOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractEventOptions{}

// ContractEventOptions Type conversion options for an event.
type ContractEventOptions struct {
	Signature *string             `json:"signature,omitempty"`
	Inputs    []ContractParameter `json:"inputs"`
}

type _ContractEventOptions ContractEventOptions

// NewContractEventOptions instantiates a new ContractEventOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractEventOptions(inputs []ContractParameter) *ContractEventOptions {
	this := ContractEventOptions{}
	this.Inputs = inputs
	return &this
}

// NewContractEventOptionsWithDefaults instantiates a new ContractEventOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractEventOptionsWithDefaults() *ContractEventOptions {
	this := ContractEventOptions{}
	return &this
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *ContractEventOptions) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContractEventOptions) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *ContractEventOptions) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *ContractEventOptions) SetSignature(v string) {
	o.Signature = &v
}

// GetInputs returns the Inputs field value
func (o *ContractEventOptions) GetInputs() []ContractParameter {
	if o == nil {
		var ret []ContractParameter
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *ContractEventOptions) GetInputsOk() ([]ContractParameter, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *ContractEventOptions) SetInputs(v []ContractParameter) {
	o.Inputs = v
}

func (o ContractEventOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	toSerialize["inputs"] = o.Inputs
	return toSerialize, nil
}

type NullableContractEventOptions struct {
	value *ContractEventOptions
	isSet bool
}

func (v NullableContractEventOptions) Get() *ContractEventOptions {
	return v.value
}

func (v *NullableContractEventOptions) Set(val *ContractEventOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableContractEventOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableContractEventOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractEventOptions(val *ContractEventOptions) *NullableContractEventOptions {
	return &NullableContractEventOptions{value: val, isSet: true}
}

func (v NullableContractEventOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractEventOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
