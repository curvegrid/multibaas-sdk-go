/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
	"time"
)

// checks if the Event type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Event{}

// Event An event returned by the API call.
type Event struct {
	// The time at which the event was triggered.
	TriggeredAt time.Time              `json:"triggeredAt"`
	Event       EventInformation       `json:"event"`
	Transaction TransactionInformation `json:"transaction"`
}

type _Event Event

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent(triggeredAt time.Time, event EventInformation, transaction TransactionInformation) *Event {
	this := Event{}
	this.TriggeredAt = triggeredAt
	this.Event = event
	this.Transaction = transaction
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetTriggeredAt returns the TriggeredAt field value
func (o *Event) GetTriggeredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TriggeredAt
}

// GetTriggeredAtOk returns a tuple with the TriggeredAt field value
// and a boolean to check if the value has been set.
func (o *Event) GetTriggeredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TriggeredAt, true
}

// SetTriggeredAt sets field value
func (o *Event) SetTriggeredAt(v time.Time) {
	o.TriggeredAt = v
}

// GetEvent returns the Event field value
func (o *Event) GetEvent() EventInformation {
	if o == nil {
		var ret EventInformation
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *Event) GetEventOk() (*EventInformation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *Event) SetEvent(v EventInformation) {
	o.Event = v
}

// GetTransaction returns the Transaction field value
func (o *Event) GetTransaction() TransactionInformation {
	if o == nil {
		var ret TransactionInformation
		return ret
	}

	return o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value
// and a boolean to check if the value has been set.
func (o *Event) GetTransactionOk() (*TransactionInformation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transaction, true
}

// SetTransaction sets field value
func (o *Event) SetTransaction(v TransactionInformation) {
	o.Transaction = v
}

func (o Event) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggeredAt"] = o.TriggeredAt
	toSerialize["event"] = o.Event
	toSerialize["transaction"] = o.Transaction
	return toSerialize, nil
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
