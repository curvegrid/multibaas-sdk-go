/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the BaseAPIKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseAPIKey{}

// BaseAPIKey An API key.
type BaseAPIKey struct {
	// A label.
	Label string `json:"label"`
}

// NewBaseAPIKey instantiates a new BaseAPIKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseAPIKey(label string) *BaseAPIKey {
	this := BaseAPIKey{}
	this.Label = label
	return &this
}

// NewBaseAPIKeyWithDefaults instantiates a new BaseAPIKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseAPIKeyWithDefaults() *BaseAPIKey {
	this := BaseAPIKey{}
	return &this
}

// GetLabel returns the Label field value
func (o *BaseAPIKey) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *BaseAPIKey) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *BaseAPIKey) SetLabel(v string) {
	o.Label = v
}

func (o BaseAPIKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseAPIKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	return toSerialize, nil
}

type NullableBaseAPIKey struct {
	value *BaseAPIKey
	isSet bool
}

func (v NullableBaseAPIKey) Get() *BaseAPIKey {
	return v.value
}

func (v *NullableBaseAPIKey) Set(val *BaseAPIKey) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseAPIKey) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseAPIKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseAPIKey(val *BaseAPIKey) *NullableBaseAPIKey {
	return &NullableBaseAPIKey{value: val, isSet: true}
}

func (v NullableBaseAPIKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseAPIKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
