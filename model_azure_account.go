/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AzureAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureAccount{}

// AzureAccount An Azure account.
type AzureAccount struct {
	// A label.
	Label string `json:"label"`
	// The Application ID that will be accessing the Key Vault.
	ClientID string `json:"clientID"`
	// The applicationâ€™s secret key that you generate when you first register the application in Azure.
	ClientSecret string `json:"clientSecret"`
	// Also known as Directory ID.
	TenantID string `json:"tenantID"`
	// The ID linked to your subscription to Azure services.
	SubscriptionID string `json:"subscriptionID"`
	// The Resource Group Name for the resource being accessed.
	BaseGroupName string `json:"baseGroupName"`
	Id            int64  `json:"id"`
}

type _AzureAccount AzureAccount

// NewAzureAccount instantiates a new AzureAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureAccount(label string, clientID string, clientSecret string, tenantID string, subscriptionID string, baseGroupName string, id int64) *AzureAccount {
	this := AzureAccount{}
	this.Label = label
	this.ClientID = clientID
	this.ClientSecret = clientSecret
	this.TenantID = tenantID
	this.SubscriptionID = subscriptionID
	this.BaseGroupName = baseGroupName
	this.Id = id
	return &this
}

// NewAzureAccountWithDefaults instantiates a new AzureAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureAccountWithDefaults() *AzureAccount {
	this := AzureAccount{}
	return &this
}

// GetLabel returns the Label field value
func (o *AzureAccount) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *AzureAccount) SetLabel(v string) {
	o.Label = v
}

// GetClientID returns the ClientID field value
func (o *AzureAccount) GetClientID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientID
}

// GetClientIDOk returns a tuple with the ClientID field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetClientIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientID, true
}

// SetClientID sets field value
func (o *AzureAccount) SetClientID(v string) {
	o.ClientID = v
}

// GetClientSecret returns the ClientSecret field value
func (o *AzureAccount) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *AzureAccount) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetTenantID returns the TenantID field value
func (o *AzureAccount) GetTenantID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantID
}

// GetTenantIDOk returns a tuple with the TenantID field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetTenantIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantID, true
}

// SetTenantID sets field value
func (o *AzureAccount) SetTenantID(v string) {
	o.TenantID = v
}

// GetSubscriptionID returns the SubscriptionID field value
func (o *AzureAccount) GetSubscriptionID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionID
}

// GetSubscriptionIDOk returns a tuple with the SubscriptionID field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetSubscriptionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionID, true
}

// SetSubscriptionID sets field value
func (o *AzureAccount) SetSubscriptionID(v string) {
	o.SubscriptionID = v
}

// GetBaseGroupName returns the BaseGroupName field value
func (o *AzureAccount) GetBaseGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseGroupName
}

// GetBaseGroupNameOk returns a tuple with the BaseGroupName field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetBaseGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseGroupName, true
}

// SetBaseGroupName sets field value
func (o *AzureAccount) SetBaseGroupName(v string) {
	o.BaseGroupName = v
}

// GetId returns the Id field value
func (o *AzureAccount) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AzureAccount) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AzureAccount) SetId(v int64) {
	o.Id = v
}

func (o AzureAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["clientID"] = o.ClientID
	toSerialize["clientSecret"] = o.ClientSecret
	toSerialize["tenantID"] = o.TenantID
	toSerialize["subscriptionID"] = o.SubscriptionID
	toSerialize["baseGroupName"] = o.BaseGroupName
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *AzureAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"clientID",
		"clientSecret",
		"tenantID",
		"subscriptionID",
		"baseGroupName",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAzureAccount := _AzureAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAzureAccount)

	if err != nil {
		return err
	}

	*o = AzureAccount(varAzureAccount)

	return err
}

type NullableAzureAccount struct {
	value *AzureAccount
	isSet bool
}

func (v NullableAzureAccount) Get() *AzureAccount {
	return v.value
}

func (v *NullableAzureAccount) Set(val *AzureAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureAccount(val *AzureAccount) *NullableAzureAccount {
	return &NullableAzureAccount{value: val, isSet: true}
}

func (v NullableAzureAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
