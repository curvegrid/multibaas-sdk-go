/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the ContractABITypeConversion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContractABITypeConversion{}

// ContractABITypeConversion Holds JSON-compatible type conversion information.
type ContractABITypeConversion struct {
	Mode             string         `json:"mode"`
	DecimalsAbsolute NullableInt64  `json:"decimalsAbsolute"`
	DecimalsFunction NullableString `json:"decimalsFunction"`
}

type _ContractABITypeConversion ContractABITypeConversion

// NewContractABITypeConversion instantiates a new ContractABITypeConversion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContractABITypeConversion(mode string, decimalsAbsolute NullableInt64, decimalsFunction NullableString) *ContractABITypeConversion {
	this := ContractABITypeConversion{}
	this.Mode = mode
	this.DecimalsAbsolute = decimalsAbsolute
	this.DecimalsFunction = decimalsFunction
	return &this
}

// NewContractABITypeConversionWithDefaults instantiates a new ContractABITypeConversion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContractABITypeConversionWithDefaults() *ContractABITypeConversion {
	this := ContractABITypeConversion{}
	return &this
}

// GetMode returns the Mode field value
func (o *ContractABITypeConversion) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *ContractABITypeConversion) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *ContractABITypeConversion) SetMode(v string) {
	o.Mode = v
}

// GetDecimalsAbsolute returns the DecimalsAbsolute field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *ContractABITypeConversion) GetDecimalsAbsolute() int64 {
	if o == nil || o.DecimalsAbsolute.Get() == nil {
		var ret int64
		return ret
	}

	return *o.DecimalsAbsolute.Get()
}

// GetDecimalsAbsoluteOk returns a tuple with the DecimalsAbsolute field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractABITypeConversion) GetDecimalsAbsoluteOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DecimalsAbsolute.Get(), o.DecimalsAbsolute.IsSet()
}

// SetDecimalsAbsolute sets field value
func (o *ContractABITypeConversion) SetDecimalsAbsolute(v int64) {
	o.DecimalsAbsolute.Set(&v)
}

// GetDecimalsFunction returns the DecimalsFunction field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContractABITypeConversion) GetDecimalsFunction() string {
	if o == nil || o.DecimalsFunction.Get() == nil {
		var ret string
		return ret
	}

	return *o.DecimalsFunction.Get()
}

// GetDecimalsFunctionOk returns a tuple with the DecimalsFunction field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContractABITypeConversion) GetDecimalsFunctionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DecimalsFunction.Get(), o.DecimalsFunction.IsSet()
}

// SetDecimalsFunction sets field value
func (o *ContractABITypeConversion) SetDecimalsFunction(v string) {
	o.DecimalsFunction.Set(&v)
}

func (o ContractABITypeConversion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mode"] = o.Mode
	toSerialize["decimalsAbsolute"] = o.DecimalsAbsolute.Get()
	toSerialize["decimalsFunction"] = o.DecimalsFunction.Get()
	return toSerialize, nil
}

type NullableContractABITypeConversion struct {
	value *ContractABITypeConversion
	isSet bool
}

func (v NullableContractABITypeConversion) Get() *ContractABITypeConversion {
	return v.value
}

func (v *NullableContractABITypeConversion) Set(val *ContractABITypeConversion) {
	v.value = val
	v.isSet = true
}

func (v NullableContractABITypeConversion) IsSet() bool {
	return v.isSet
}

func (v *NullableContractABITypeConversion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContractABITypeConversion(val *ContractABITypeConversion) *NullableContractABITypeConversion {
	return &NullableContractABITypeConversion{value: val, isSet: true}
}

func (v NullableContractABITypeConversion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContractABITypeConversion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
