/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
	"time"
)

// checks if the AuditLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLog{}

// AuditLog An audit log entry.
type AuditLog struct {
	// The ID of the user who performed the action.
	ActionByID int64 `json:"actionByID"`
	// The ID of the user who was acted upon.
	ActionOnID *int64 `json:"actionOnID,omitempty"`
	// The email of the user who performed the action.
	ActionByUserEmail string `json:"actionByUserEmail"`
	// The email of the user who was acted upon.
	ActionOnUserEmail *string `json:"actionOnUserEmail,omitempty"`
	// The type of action that was performed.
	Type string `json:"type"`
	// The time the action was performed.
	CreatedAt time.Time `json:"createdAt"`
	// The data associated with the action.
	ActivityData map[string]interface{} `json:"activityData"`
}

// NewAuditLog instantiates a new AuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLog(actionByID int64, actionByUserEmail string, type_ string, createdAt time.Time, activityData map[string]interface{}) *AuditLog {
	this := AuditLog{}
	this.ActionByID = actionByID
	this.ActionByUserEmail = actionByUserEmail
	this.Type = type_
	this.CreatedAt = createdAt
	this.ActivityData = activityData
	return &this
}

// NewAuditLogWithDefaults instantiates a new AuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogWithDefaults() *AuditLog {
	this := AuditLog{}
	return &this
}

// GetActionByID returns the ActionByID field value
func (o *AuditLog) GetActionByID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActionByID
}

// GetActionByIDOk returns a tuple with the ActionByID field value
// and a boolean to check if the value has been set.
func (o *AuditLog) GetActionByIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionByID, true
}

// SetActionByID sets field value
func (o *AuditLog) SetActionByID(v int64) {
	o.ActionByID = v
}

// GetActionOnID returns the ActionOnID field value if set, zero value otherwise.
func (o *AuditLog) GetActionOnID() int64 {
	if o == nil || IsNil(o.ActionOnID) {
		var ret int64
		return ret
	}
	return *o.ActionOnID
}

// GetActionOnIDOk returns a tuple with the ActionOnID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLog) GetActionOnIDOk() (*int64, bool) {
	if o == nil || IsNil(o.ActionOnID) {
		return nil, false
	}
	return o.ActionOnID, true
}

// HasActionOnID returns a boolean if a field has been set.
func (o *AuditLog) HasActionOnID() bool {
	if o != nil && !IsNil(o.ActionOnID) {
		return true
	}

	return false
}

// SetActionOnID gets a reference to the given int64 and assigns it to the ActionOnID field.
func (o *AuditLog) SetActionOnID(v int64) {
	o.ActionOnID = &v
}

// GetActionByUserEmail returns the ActionByUserEmail field value
func (o *AuditLog) GetActionByUserEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionByUserEmail
}

// GetActionByUserEmailOk returns a tuple with the ActionByUserEmail field value
// and a boolean to check if the value has been set.
func (o *AuditLog) GetActionByUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionByUserEmail, true
}

// SetActionByUserEmail sets field value
func (o *AuditLog) SetActionByUserEmail(v string) {
	o.ActionByUserEmail = v
}

// GetActionOnUserEmail returns the ActionOnUserEmail field value if set, zero value otherwise.
func (o *AuditLog) GetActionOnUserEmail() string {
	if o == nil || IsNil(o.ActionOnUserEmail) {
		var ret string
		return ret
	}
	return *o.ActionOnUserEmail
}

// GetActionOnUserEmailOk returns a tuple with the ActionOnUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLog) GetActionOnUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ActionOnUserEmail) {
		return nil, false
	}
	return o.ActionOnUserEmail, true
}

// HasActionOnUserEmail returns a boolean if a field has been set.
func (o *AuditLog) HasActionOnUserEmail() bool {
	if o != nil && !IsNil(o.ActionOnUserEmail) {
		return true
	}

	return false
}

// SetActionOnUserEmail gets a reference to the given string and assigns it to the ActionOnUserEmail field.
func (o *AuditLog) SetActionOnUserEmail(v string) {
	o.ActionOnUserEmail = &v
}

// GetType returns the Type field value
func (o *AuditLog) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuditLog) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuditLog) SetType(v string) {
	o.Type = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AuditLog) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AuditLog) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AuditLog) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetActivityData returns the ActivityData field value
func (o *AuditLog) GetActivityData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ActivityData
}

// GetActivityDataOk returns a tuple with the ActivityData field value
// and a boolean to check if the value has been set.
func (o *AuditLog) GetActivityDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ActivityData, true
}

// SetActivityData sets field value
func (o *AuditLog) SetActivityData(v map[string]interface{}) {
	o.ActivityData = v
}

func (o AuditLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["actionByID"] = o.ActionByID
	if !IsNil(o.ActionOnID) {
		toSerialize["actionOnID"] = o.ActionOnID
	}
	toSerialize["actionByUserEmail"] = o.ActionByUserEmail
	if !IsNil(o.ActionOnUserEmail) {
		toSerialize["actionOnUserEmail"] = o.ActionOnUserEmail
	}
	toSerialize["type"] = o.Type
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["activityData"] = o.ActivityData
	return toSerialize, nil
}

type NullableAuditLog struct {
	value *AuditLog
	isSet bool
}

func (v NullableAuditLog) Get() *AuditLog {
	return v.value
}

func (v *NullableAuditLog) Set(val *AuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLog(val *AuditLog) *NullableAuditLog {
	return &NullableAuditLog{value: val, isSet: true}
}

func (v NullableAuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
