/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the TransactionToSignResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionToSignResponse{}

// TransactionToSignResponse struct for TransactionToSignResponse
type TransactionToSignResponse struct {
	PostMethodResponse
	Tx        BaseTransactionToSignTx `json:"tx"`
	Submitted bool                    `json:"submitted"`
}

// NewTransactionToSignResponse instantiates a new TransactionToSignResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionToSignResponse(tx BaseTransactionToSignTx, submitted bool, kind string) *TransactionToSignResponse {
	this := TransactionToSignResponse{}
	this.Kind = kind
	this.Tx = tx
	this.Submitted = submitted
	return &this
}

// NewTransactionToSignResponseWithDefaults instantiates a new TransactionToSignResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionToSignResponseWithDefaults() *TransactionToSignResponse {
	this := TransactionToSignResponse{}
	return &this
}

// GetTx returns the Tx field value
func (o *TransactionToSignResponse) GetTx() BaseTransactionToSignTx {
	if o == nil {
		var ret BaseTransactionToSignTx
		return ret
	}

	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value
// and a boolean to check if the value has been set.
func (o *TransactionToSignResponse) GetTxOk() (*BaseTransactionToSignTx, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tx, true
}

// SetTx sets field value
func (o *TransactionToSignResponse) SetTx(v BaseTransactionToSignTx) {
	o.Tx = v
}

// GetSubmitted returns the Submitted field value
func (o *TransactionToSignResponse) GetSubmitted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Submitted
}

// GetSubmittedOk returns a tuple with the Submitted field value
// and a boolean to check if the value has been set.
func (o *TransactionToSignResponse) GetSubmittedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Submitted, true
}

// SetSubmitted sets field value
func (o *TransactionToSignResponse) SetSubmitted(v bool) {
	o.Submitted = v
}

func (o TransactionToSignResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionToSignResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedPostMethodResponse, errPostMethodResponse := json.Marshal(o.PostMethodResponse)
	if errPostMethodResponse != nil {
		return map[string]interface{}{}, errPostMethodResponse
	}
	errPostMethodResponse = json.Unmarshal([]byte(serializedPostMethodResponse), &toSerialize)
	if errPostMethodResponse != nil {
		return map[string]interface{}{}, errPostMethodResponse
	}
	toSerialize["tx"] = o.Tx
	toSerialize["submitted"] = o.Submitted
	return toSerialize, nil
}

type NullableTransactionToSignResponse struct {
	value *TransactionToSignResponse
	isSet bool
}

func (v NullableTransactionToSignResponse) Get() *TransactionToSignResponse {
	return v.value
}

func (v *NullableTransactionToSignResponse) Set(val *TransactionToSignResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionToSignResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionToSignResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionToSignResponse(val *TransactionToSignResponse) *NullableTransactionToSignResponse {
	return &NullableTransactionToSignResponse{value: val, isSet: true}
}

func (v NullableTransactionToSignResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionToSignResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
