/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the LinkAddressContractRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkAddressContractRequest{}

// LinkAddressContractRequest struct for LinkAddressContractRequest
type LinkAddressContractRequest struct {
	// A label.
	Label string `json:"label"`
	// The contract version.
	Version *string `json:"version,omitempty"`
	// The block number from which to start syncing events. The value can be `latest` for the latest block number, an absolute block number (e.g. `123` for the block number 123), or a relative block number (e.g. `-100` for 100 blocks before the latest block). If absent, the event monitor will be disabled for this contract and events won't be synced.
	StartingBlock *string `json:"startingBlock,omitempty"`
}

// NewLinkAddressContractRequest instantiates a new LinkAddressContractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkAddressContractRequest(label string) *LinkAddressContractRequest {
	this := LinkAddressContractRequest{}
	this.Label = label
	return &this
}

// NewLinkAddressContractRequestWithDefaults instantiates a new LinkAddressContractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkAddressContractRequestWithDefaults() *LinkAddressContractRequest {
	this := LinkAddressContractRequest{}
	return &this
}

// GetLabel returns the Label field value
func (o *LinkAddressContractRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *LinkAddressContractRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *LinkAddressContractRequest) SetLabel(v string) {
	o.Label = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *LinkAddressContractRequest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkAddressContractRequest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *LinkAddressContractRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *LinkAddressContractRequest) SetVersion(v string) {
	o.Version = &v
}

// GetStartingBlock returns the StartingBlock field value if set, zero value otherwise.
func (o *LinkAddressContractRequest) GetStartingBlock() string {
	if o == nil || IsNil(o.StartingBlock) {
		var ret string
		return ret
	}
	return *o.StartingBlock
}

// GetStartingBlockOk returns a tuple with the StartingBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkAddressContractRequest) GetStartingBlockOk() (*string, bool) {
	if o == nil || IsNil(o.StartingBlock) {
		return nil, false
	}
	return o.StartingBlock, true
}

// HasStartingBlock returns a boolean if a field has been set.
func (o *LinkAddressContractRequest) HasStartingBlock() bool {
	if o != nil && !IsNil(o.StartingBlock) {
		return true
	}

	return false
}

// SetStartingBlock gets a reference to the given string and assigns it to the StartingBlock field.
func (o *LinkAddressContractRequest) SetStartingBlock(v string) {
	o.StartingBlock = &v
}

func (o LinkAddressContractRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkAddressContractRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.StartingBlock) {
		toSerialize["startingBlock"] = o.StartingBlock
	}
	return toSerialize, nil
}

type NullableLinkAddressContractRequest struct {
	value *LinkAddressContractRequest
	isSet bool
}

func (v NullableLinkAddressContractRequest) Get() *LinkAddressContractRequest {
	return v.value
}

func (v *NullableLinkAddressContractRequest) Set(val *LinkAddressContractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkAddressContractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkAddressContractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkAddressContractRequest(val *LinkAddressContractRequest) *NullableLinkAddressContractRequest {
	return &NullableLinkAddressContractRequest{value: val, isSet: true}
}

func (v NullableLinkAddressContractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkAddressContractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
