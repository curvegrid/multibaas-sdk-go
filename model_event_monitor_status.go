/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the EventMonitorStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventMonitorStatus{}

// EventMonitorStatus Status of an Event Monitor
type EventMonitorStatus struct {
	ContractId           *int64 `json:"contractId,omitempty"`
	AddressId            *int64 `json:"addressId,omitempty"`
	IsProcessingPastLogs bool   `json:"isProcessingPastLogs"`
	IdealBlockRange      *int64 `json:"idealBlockRange,omitempty"`
	LatestBlockNumber    int64  `json:"latestBlockNumber"`
	// The keccak256 hash as a hex string of 256 bits.
	LatestBlockHash  string `json:"latestBlockHash" validate:"regexp=^(0x[0-9a-f]{64}|0X[0-9A-F]{64})$"`
	StartBlockNumber int64  `json:"startBlockNumber"`
	// The keccak256 hash as a hex string of 256 bits.
	StartBlockHash string `json:"startBlockHash" validate:"regexp=^(0x[0-9a-f]{64}|0X[0-9A-F]{64})$"`
	UpdatedAt      string `json:"updatedAt"`
}

type _EventMonitorStatus EventMonitorStatus

// NewEventMonitorStatus instantiates a new EventMonitorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventMonitorStatus(isProcessingPastLogs bool, latestBlockNumber int64, latestBlockHash string, startBlockNumber int64, startBlockHash string, updatedAt string) *EventMonitorStatus {
	this := EventMonitorStatus{}
	this.IsProcessingPastLogs = isProcessingPastLogs
	this.LatestBlockNumber = latestBlockNumber
	this.LatestBlockHash = latestBlockHash
	this.StartBlockNumber = startBlockNumber
	this.StartBlockHash = startBlockHash
	this.UpdatedAt = updatedAt
	return &this
}

// NewEventMonitorStatusWithDefaults instantiates a new EventMonitorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventMonitorStatusWithDefaults() *EventMonitorStatus {
	this := EventMonitorStatus{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *EventMonitorStatus) GetContractId() int64 {
	if o == nil || IsNil(o.ContractId) {
		var ret int64
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetContractIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *EventMonitorStatus) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int64 and assigns it to the ContractId field.
func (o *EventMonitorStatus) SetContractId(v int64) {
	o.ContractId = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *EventMonitorStatus) GetAddressId() int64 {
	if o == nil || IsNil(o.AddressId) {
		var ret int64
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetAddressIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AddressId) {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *EventMonitorStatus) HasAddressId() bool {
	if o != nil && !IsNil(o.AddressId) {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given int64 and assigns it to the AddressId field.
func (o *EventMonitorStatus) SetAddressId(v int64) {
	o.AddressId = &v
}

// GetIsProcessingPastLogs returns the IsProcessingPastLogs field value
func (o *EventMonitorStatus) GetIsProcessingPastLogs() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsProcessingPastLogs
}

// GetIsProcessingPastLogsOk returns a tuple with the IsProcessingPastLogs field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetIsProcessingPastLogsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsProcessingPastLogs, true
}

// SetIsProcessingPastLogs sets field value
func (o *EventMonitorStatus) SetIsProcessingPastLogs(v bool) {
	o.IsProcessingPastLogs = v
}

// GetIdealBlockRange returns the IdealBlockRange field value if set, zero value otherwise.
func (o *EventMonitorStatus) GetIdealBlockRange() int64 {
	if o == nil || IsNil(o.IdealBlockRange) {
		var ret int64
		return ret
	}
	return *o.IdealBlockRange
}

// GetIdealBlockRangeOk returns a tuple with the IdealBlockRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetIdealBlockRangeOk() (*int64, bool) {
	if o == nil || IsNil(o.IdealBlockRange) {
		return nil, false
	}
	return o.IdealBlockRange, true
}

// HasIdealBlockRange returns a boolean if a field has been set.
func (o *EventMonitorStatus) HasIdealBlockRange() bool {
	if o != nil && !IsNil(o.IdealBlockRange) {
		return true
	}

	return false
}

// SetIdealBlockRange gets a reference to the given int64 and assigns it to the IdealBlockRange field.
func (o *EventMonitorStatus) SetIdealBlockRange(v int64) {
	o.IdealBlockRange = &v
}

// GetLatestBlockNumber returns the LatestBlockNumber field value
func (o *EventMonitorStatus) GetLatestBlockNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LatestBlockNumber
}

// GetLatestBlockNumberOk returns a tuple with the LatestBlockNumber field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetLatestBlockNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestBlockNumber, true
}

// SetLatestBlockNumber sets field value
func (o *EventMonitorStatus) SetLatestBlockNumber(v int64) {
	o.LatestBlockNumber = v
}

// GetLatestBlockHash returns the LatestBlockHash field value
func (o *EventMonitorStatus) GetLatestBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LatestBlockHash
}

// GetLatestBlockHashOk returns a tuple with the LatestBlockHash field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetLatestBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestBlockHash, true
}

// SetLatestBlockHash sets field value
func (o *EventMonitorStatus) SetLatestBlockHash(v string) {
	o.LatestBlockHash = v
}

// GetStartBlockNumber returns the StartBlockNumber field value
func (o *EventMonitorStatus) GetStartBlockNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartBlockNumber
}

// GetStartBlockNumberOk returns a tuple with the StartBlockNumber field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetStartBlockNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartBlockNumber, true
}

// SetStartBlockNumber sets field value
func (o *EventMonitorStatus) SetStartBlockNumber(v int64) {
	o.StartBlockNumber = v
}

// GetStartBlockHash returns the StartBlockHash field value
func (o *EventMonitorStatus) GetStartBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartBlockHash
}

// GetStartBlockHashOk returns a tuple with the StartBlockHash field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetStartBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartBlockHash, true
}

// SetStartBlockHash sets field value
func (o *EventMonitorStatus) SetStartBlockHash(v string) {
	o.StartBlockHash = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *EventMonitorStatus) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *EventMonitorStatus) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *EventMonitorStatus) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o EventMonitorStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.AddressId) {
		toSerialize["addressId"] = o.AddressId
	}
	toSerialize["isProcessingPastLogs"] = o.IsProcessingPastLogs
	if !IsNil(o.IdealBlockRange) {
		toSerialize["idealBlockRange"] = o.IdealBlockRange
	}
	toSerialize["latestBlockNumber"] = o.LatestBlockNumber
	toSerialize["latestBlockHash"] = o.LatestBlockHash
	toSerialize["startBlockNumber"] = o.StartBlockNumber
	toSerialize["startBlockHash"] = o.StartBlockHash
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableEventMonitorStatus struct {
	value *EventMonitorStatus
	isSet bool
}

func (v NullableEventMonitorStatus) Get() *EventMonitorStatus {
	return v.value
}

func (v *NullableEventMonitorStatus) Set(val *EventMonitorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableEventMonitorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableEventMonitorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventMonitorStatus(val *EventMonitorStatus) *NullableEventMonitorStatus {
	return &NullableEventMonitorStatus{value: val, isSet: true}
}

func (v NullableEventMonitorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventMonitorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
