/*
MultiBaas API

MultiBaas's REST APIv0.

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package multibaas

import (
	"encoding/json"
)

// checks if the ChainStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChainStatus{}

// ChainStatus The status of the Chain
type ChainStatus struct {
	BlockNumber int64 `json:"blockNumber"`
	// The client version for this chain node.
	Version   string `json:"version"`
	ChainID   int64  `json:"chainID"`
	NetworkID int64  `json:"networkID"`
	// The current base fee (only available for chains that support EIP-1559).
	BaseFee *string `json:"baseFee,omitempty"`
}

type _ChainStatus ChainStatus

// NewChainStatus instantiates a new ChainStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChainStatus(blockNumber int64, version string, chainID int64, networkID int64) *ChainStatus {
	this := ChainStatus{}
	this.BlockNumber = blockNumber
	this.Version = version
	this.ChainID = chainID
	this.NetworkID = networkID
	return &this
}

// NewChainStatusWithDefaults instantiates a new ChainStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainStatusWithDefaults() *ChainStatus {
	this := ChainStatus{}
	return &this
}

// GetBlockNumber returns the BlockNumber field value
func (o *ChainStatus) GetBlockNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value
// and a boolean to check if the value has been set.
func (o *ChainStatus) GetBlockNumberOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNumber, true
}

// SetBlockNumber sets field value
func (o *ChainStatus) SetBlockNumber(v int64) {
	o.BlockNumber = v
}

// GetVersion returns the Version field value
func (o *ChainStatus) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ChainStatus) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ChainStatus) SetVersion(v string) {
	o.Version = v
}

// GetChainID returns the ChainID field value
func (o *ChainStatus) GetChainID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ChainID
}

// GetChainIDOk returns a tuple with the ChainID field value
// and a boolean to check if the value has been set.
func (o *ChainStatus) GetChainIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainID, true
}

// SetChainID sets field value
func (o *ChainStatus) SetChainID(v int64) {
	o.ChainID = v
}

// GetNetworkID returns the NetworkID field value
func (o *ChainStatus) GetNetworkID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NetworkID
}

// GetNetworkIDOk returns a tuple with the NetworkID field value
// and a boolean to check if the value has been set.
func (o *ChainStatus) GetNetworkIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkID, true
}

// SetNetworkID sets field value
func (o *ChainStatus) SetNetworkID(v int64) {
	o.NetworkID = v
}

// GetBaseFee returns the BaseFee field value if set, zero value otherwise.
func (o *ChainStatus) GetBaseFee() string {
	if o == nil || IsNil(o.BaseFee) {
		var ret string
		return ret
	}
	return *o.BaseFee
}

// GetBaseFeeOk returns a tuple with the BaseFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainStatus) GetBaseFeeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseFee) {
		return nil, false
	}
	return o.BaseFee, true
}

// HasBaseFee returns a boolean if a field has been set.
func (o *ChainStatus) HasBaseFee() bool {
	if o != nil && !IsNil(o.BaseFee) {
		return true
	}

	return false
}

// SetBaseFee gets a reference to the given string and assigns it to the BaseFee field.
func (o *ChainStatus) SetBaseFee(v string) {
	o.BaseFee = &v
}

func (o ChainStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blockNumber"] = o.BlockNumber
	toSerialize["version"] = o.Version
	toSerialize["chainID"] = o.ChainID
	toSerialize["networkID"] = o.NetworkID
	if !IsNil(o.BaseFee) {
		toSerialize["baseFee"] = o.BaseFee
	}
	return toSerialize, nil
}

type NullableChainStatus struct {
	value *ChainStatus
	isSet bool
}

func (v NullableChainStatus) Get() *ChainStatus {
	return v.value
}

func (v *NullableChainStatus) Set(val *ChainStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableChainStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableChainStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChainStatus(val *ChainStatus) *NullableChainStatus {
	return &NullableChainStatus{value: val, isSet: true}
}

func (v NullableChainStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChainStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
